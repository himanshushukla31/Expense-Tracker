{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Himanshu Shukla\\\\Desktop\\\\React-App-Expenses\\\\src\\\\components\\\\ExpenseDate.jsx\";\nimport \"./ExpenseDate.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseDate(props) {\n  //toLocaleDateString takes in two parameters, locale(language) and options(specification of the format)\n  const month = props.date.toLocaleString('en-US', {\n    month: 'long'\n  }); //Only use curly braces for the props when using it to display a value in html\n\n  const day = props.date.toLocaleString('en-US', {\n    month: '2-digit'\n  });\n  const year = props.date.getFullYear();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expense-date\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date__month\",\n      children: month\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date__year\",\n      children: year\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expense-date__day\",\n      children: day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 6\n  }, this);\n}\n\n_c = ExpenseDate;\nexport default ExpenseDate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseDate\");","map":{"version":3,"sources":["C:/Users/Himanshu Shukla/Desktop/React-App-Expenses/src/components/ExpenseDate.jsx"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear"],"mappings":";AAAA,OAAO,mBAAP;;;AAEA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAEtB;AACF,QAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAkC;AAACF,IAAAA,KAAK,EAAE;AAAR,GAAlC,CAAd,CAHwB,CAGyC;;AACjE,QAAMG,GAAG,GAAGJ,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAkC;AAACF,IAAAA,KAAK,EAAE;AAAR,GAAlC,CAAZ;AACA,QAAMI,IAAI,GAAGL,KAAK,CAACE,IAAN,CAAWI,WAAX,EAAb;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACG;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA,gBAAsCL;AAAtC;AAAA;AAAA;AAAA;AAAA,YADH,eAEG;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,gBAAqCI;AAArC;AAAA;AAAA;AAAA;AAAA,YAFH,eAGG;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,gBAAoCD;AAApC;AAAA;AAAA;AAAA;AAAA,YAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOH;;KAdQL,W;AAgBT,eAAeA,WAAf","sourcesContent":["import \"./ExpenseDate.css\"\r\n\r\nfunction ExpenseDate(props) {\r\n\r\n      //toLocaleDateString takes in two parameters, locale(language) and options(specification of the format)\r\n    const month = props.date.toLocaleString('en-US',{month: 'long'}) //Only use curly braces for the props when using it to display a value in html\r\n    const day = props.date.toLocaleString('en-US',{month: '2-digit'})\r\n    const year = props.date.getFullYear();\r\n\r\n    return (\r\n     <div className=\"expense-date\">\r\n        <div className=\"expense-date__month\">{month}</div>\r\n        <div className=\"expense-date__year\">{year}</div>\r\n        <div className=\"expense-date__day\">{day}</div>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default ExpenseDate;"]},"metadata":{},"sourceType":"module"}