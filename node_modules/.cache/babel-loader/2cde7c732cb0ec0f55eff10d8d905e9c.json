{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Himanshu Shukla\\\\Desktop\\\\React-App-Expenses\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseForm = props => {\n  _s();\n\n  const [EnteredTitle, setEnteredTitle] = useState(\" \");\n  const [EnteredAmount, setEnteredAmount] = useState(\" \");\n  const [EnteredDate, setEnteredDate] = useState(\" \");\n\n  const titleChangeHandler = event => {\n    setEnteredTitle(event.target.value);\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault(); //This functions helps us to prevent the reloading of the form when it is submitted.\n    //This is pure javascript function nothing react specific.\n\n    const enteredExpenseData = {\n      title: EnteredTitle,\n      amount: EnteredAmount,\n      date: new Date(EnteredDate)\n    };\n    props.onSaveExpenseData(enteredExpenseData);\n    setEnteredAmount(\" \"); //To clear up the value in the input once the form is submitted.\n\n    setEnteredTitle(\" \");\n    setEnteredDate(\" \");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: EnteredTitle,\n          onChange: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: EnteredAmount,\n          min: \"0.01\",\n          step: \"0.01\",\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          value: EnteredDate,\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          onChange: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Expense\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n};\n\n_s(ExpenseForm, \"LlK7xz0/GlH71JA5bxk7gJgXnbc=\");\n\n_c = ExpenseForm;\nexport default ExpenseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"sources":["C:/Users/Himanshu Shukla/Desktop/React-App-Expenses/src/components/NewExpense/ExpenseForm.js"],"names":["React","useState","ExpenseForm","props","EnteredTitle","setEnteredTitle","EnteredAmount","setEnteredAmount","EnteredDate","setEnteredDate","titleChangeHandler","event","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","enteredExpenseData","title","amount","date","Date","onSaveExpenseData"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\"\r\n\r\nconst ExpenseForm = (props)=> {\r\n    const [EnteredTitle,setEnteredTitle]= useState(\" \");\r\n    const [EnteredAmount,setEnteredAmount]= useState(\" \");\r\n    const [EnteredDate,setEnteredDate]= useState(\" \");\r\n\r\n\r\n    const titleChangeHandler= (event)=> {\r\n        setEnteredTitle(event.target.value)\r\n    }\r\n    const amountChangeHandler= (event)=> {\r\n        setEnteredAmount(event.target.value)\r\n    }\r\n    const dateChangeHandler= (event)=> {\r\n        setEnteredDate(event.target.value)\r\n    }\r\n    const submitHandler= (event)=> {\r\n        event.preventDefault();  //This functions helps us to prevent the reloading of the form when it is submitted.\r\n                                //This is pure javascript function nothing react specific.\r\n\r\n        const enteredExpenseData= {\r\n            title: EnteredTitle,\r\n            amount: EnteredAmount,\r\n            date: new Date(EnteredDate)\r\n        }\r\n        props.onSaveExpenseData(enteredExpenseData)\r\n        \r\n        setEnteredAmount(\" \"); //To clear up the value in the input once the form is submitted.\r\n        setEnteredTitle(\" \");\r\n        setEnteredDate(\" \");\r\n\r\n\r\n    }\r\n\r\n    return <form onSubmit= {submitHandler}>\r\n          <div className=\"new-expense__controls\">\r\n            <div className=\"new-expense__control\">\r\n                <input type=\"text\" value={EnteredTitle} onChange={titleChangeHandler}/>\r\n                <label>Title</label>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <input type=\"number\" value={EnteredAmount} min=\"0.01\" step=\"0.01\" onChange={amountChangeHandler}/>\r\n                <label>Amount</label>\r\n            </div>\r\n            <div className=\"new-expense__control\">\r\n                <input type=\"date\" value={EnteredDate} min=\"2019-01-01\" max=\"2022-12-31\" onChange={dateChangeHandler}/>\r\n                <label>Date</label>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n          </div>\r\n    </form>\r\n}\r\n\r\nexport default ExpenseForm;"]},"metadata":{},"sourceType":"module"}